{"version":3,"sources":["services/phonebook.js","components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","App.js","serviceWorker.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","person","delete","id","put","Filter","props","onChange","placeholder","PersonForm","handleNameChange","handleNumberChange","handleSaveClick","newName","newNumber","value","onClick","type","Persons","persons","filter","handleDelete","name","toUpperCase","includes","map","key","number","Notification","message","errorMessage","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","setNewName","setNewNumber","setFilter","setMessage","setErrorMessage","useEffect","phonebook","personToDelete","a","window","confirm","setTimeout","catch","error","console","log","event","target","preventDefault","nameObject","some","personToBeUpdated","changedObject","newPersons","n","handleUpdate","find","concat","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+QAEMA,EAAU,eAuBD,EArBA,WACb,OAAOC,IAAMC,IAAIF,GAASG,MAAK,SAACC,GAE9B,OAAOA,EAASC,SAkBL,EAdA,SAACC,GACd,OAAOL,IAAMM,KAAKP,EAASM,GAAWH,MAAK,SAACC,GAAD,OAAcA,EAASC,SAarD,EAVH,SAACG,GACX,OAAOP,IAAMQ,OAAN,UAAgBT,EAAhB,YAA2BQ,EAAOE,MAS5B,EANA,SAACA,EAAIJ,GAClB,OAAOL,IACJU,IADI,UACGX,EADH,YACcU,GAAMJ,GACxBH,MAAK,SAACC,GAAD,OAAcA,EAASC,SCblBO,EAPA,SAACC,GACZ,OACI,2BAAOC,SAAUD,EAAMC,SAAUC,YAAY,qBCsBtCC,EAxBI,SAACH,GAAW,IAE3BI,EAKEJ,EALFI,iBACAC,EAIEL,EAJFK,mBACAC,EAGEN,EAHFM,gBACAC,EAEEP,EAFFO,QACAC,EACER,EADFQ,UAEF,OACE,8BACE,sCACQ,2BAAOC,MAAOF,EAASN,SAAUG,IACvC,6BAFF,WAGU,2BAAOK,MAAOD,EAAWP,SAAUI,KAE7C,6BACE,4BAAQK,QAASJ,EAAiBK,KAAK,UAAvC,UCQOC,EAxBC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QAASC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAWlC,OACE,8BARkB,KAAXD,EACHD,EACAA,EAAQC,QAAO,SAACnB,GAAD,OACbA,EAAOqB,KAAKC,cAAcC,SAASJ,EAAOG,mBAM7BE,KAAI,SAACxB,GACpB,OACE,uBAAGyB,IAAKzB,EAAOqB,MACZrB,EAAOqB,KADV,IACiBrB,EAAO0B,OAAO,4BAAQX,QAAW,kBAAIK,EAAapB,KAApC,gBCqB1B2B,EArCM,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAoB/B,OAAgB,OAAZD,GAAqC,OAAjBC,EACf,KACmB,OAAjBA,EAEP,6BACE,yBAAKC,MAxBe,CACxBC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAiBsBT,IAKlC,6BACE,yBAAKE,MArBQ,CACjBC,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAceR,KC2GlBS,EApIH,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACTrB,EADS,KACAsB,EADA,OAEcD,mBAAS,IAFvB,mBAET3B,EAFS,KAEA6B,EAFA,OAGkBF,mBAAS,IAH3B,mBAGT1B,EAHS,KAGE6B,EAHF,OAIYH,mBAAS,IAJrB,mBAITpB,EAJS,KAIDwB,EAJC,OAKcJ,mBAAS,MALvB,mBAKTX,EALS,KAKAgB,EALA,OAMwBL,mBAAS,MANjC,mBAMTV,EANS,KAMKgB,EANL,KAQhBC,qBAAU,WACRC,IAAmBpD,MAAK,SAACC,GAAD,OAAc4C,EAAW5C,QAChD,IAEH,IAWMwB,EAAY,uCAAG,WAAO4B,GAAP,SAAAC,EAAA,0DACfC,OAAOC,QAAP,uBAA+BH,EAAe3B,OAD/B,gCAEX0B,EACCC,GAAgBrD,MAAK,SAAAC,GACxBgD,EAAW,GAAD,OAAII,EAAe3B,KAAnB,+BACV+B,YAAW,WACTR,EAAW,QACV,QAIJS,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZT,EAAgB,kBAAD,OACKG,EAAe3B,KADpB,0CAGf+B,YAAW,WACTP,EAAgB,QACf,QAlBU,OAqBnBE,IAAmBpD,MAAK,SAACC,GAAD,OAAc4C,EAAW5C,MACjD6C,EAAW,IAtBQ,2CAAH,sDA0FlB,OACE,6BACE,yCACA,kBAAC,EAAD,CAAcb,QAASA,EAASC,aAAcA,IAC9C,kBAAC,EAAD,CAAQvB,SAzGe,SAACmD,GAC1Bd,EAAUc,EAAMC,OAAO5C,UAyGrB,yCACA,kBAAC,EAAD,CACEF,QAASA,EACTC,UAAWA,EACXJ,iBA1GmB,SAACgD,GACxBhB,EAAWgB,EAAMC,OAAO5C,QA0GpBJ,mBAxGqB,SAAC+C,GAC1Bf,EAAae,EAAMC,OAAO5C,QAwGtBH,gBA3CkB,SAAC8C,GACvBA,EAAME,iBACN,IAAMC,EAAa,CACjBvC,KAAMT,EACNc,OAAQb,GAENK,EAAQ2C,MAAK,SAAC7D,GAAD,OAAYA,EAAOqB,OAAST,KAvC1B,SAACkD,EAAmBF,GACvC,IACEV,OAAOC,QAAP,UACKvC,EADL,yEA2BA,OAAO,KAvBPmC,EACUe,EAAkB5D,GAAI0D,GAC7BjE,MAAK,SAACoE,GACL,IAAMC,EAAa9C,EAAQM,KAAI,SAACxB,GAAD,OAC7BA,EAAOE,KAAO4D,EAAkB5D,GAAKF,EAAS+D,KAEhDvB,EAAWwB,GACXpB,EAAW,GAAD,OAAIkB,EAAkBzC,KAAtB,wBACd+B,YAAW,WACTR,EAAW,QACV,QAEAS,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZT,EAAgB,kBAAD,OACKiB,EAAkBzC,KADvB,0CAGf+B,YAAW,WACTP,EAAgB,QACf,KACHL,EAAWtB,EAAQC,QAAO,SAAC8C,GAAD,OAAOA,EAAE/D,KAAO4D,EAAkB5D,UAehEgE,CADuBhD,EAAQiD,MAAK,SAACnE,GAAD,OAAYA,EAAOqB,OAAST,KACnCgD,IAE7Bb,EACUa,GACPjE,MAAK,SAACC,GAAD,OAAc4C,EAAWtB,EAAQkD,OAAOxE,OAC7CyD,OAAM,SAAAC,GAELT,EAAgBS,EAAM1D,SAASC,KAAK+B,SACpCwB,YAAW,WACTP,EAAgB,QACf,QAKPD,EAAW,SAAD,OAAUgB,EAAWvC,OAC/B+B,YAAW,WACTR,EAAW,QACV,KACHH,EAAW,IACXC,EAAa,QAiBb,uCACA,kBAAC,EAAD,CAASxB,QAASA,EAASC,OAAQA,EAAQC,aAAcA,MC3H3CiD,QACW,cAA7BnB,OAAOoB,SAASC,UAEe,UAA7BrB,OAAOoB,SAASC,UAEhBrB,OAAOoB,SAASC,SAASC,MACvB,2DCTNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBrF,MAAK,SAAAsF,GACJA,EAAaC,gBAEd7B,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM1B,c","file":"static/js/main.88e97038.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n  return axios.get(baseUrl).then((response) => {\r\n    \r\n    return response.data;\r\n  });\r\n};\r\n\r\nconst create = (newObject) => {\r\n  return axios.post(baseUrl, newObject).then((response) => response.data);\r\n};\r\n\r\nconst del = (person) => {\r\n  return axios.delete(`${baseUrl}/${person.id}`);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n  return axios\r\n    .put(`${baseUrl}/${id}`, newObject)\r\n    .then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  del,\r\n  update,\r\n};\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n    return (\r\n        <input onChange={props.onChange} placeholder=\"Search for name\" />\r\n     )\r\n\r\n}\r\n \r\nexport default Filter","import React from \"react\";\r\n\r\nconst PersonForm = (props) => {\r\n  const {\r\n    handleNameChange,\r\n    handleNumberChange,\r\n    handleSaveClick,\r\n    newName,\r\n    newNumber,\r\n  } = props;\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input value={newName} onChange={handleNameChange} />\r\n        <br />\r\n        number: <input value={newNumber} onChange={handleNumberChange} />\r\n      </div>\r\n      <div>\r\n        <button onClick={handleSaveClick} type=\"submit\">\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PersonForm;\r\n","import React from \"react\";\r\n\r\nconst Persons = ({ persons, filter, handleDelete }) => {\r\n  \r\n\r\n  const personsToShow = () => {\r\n    return filter === \"\"\r\n      ? persons\r\n      : persons.filter((person) =>\r\n          person.name.toUpperCase().includes(filter.toUpperCase())\r\n        );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {personsToShow().map((person) => {\r\n        return (\r\n          <p key={person.name}>\r\n            {person.name} {person.number}<button onClick = {()=>handleDelete(person)}>Delete</button>\r\n          </p>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message, errorMessage }) => {\r\n  const notificationStyle = {\r\n    color: \"green\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n  const errorStyle = {\r\n    color: \"red\",\r\n    background: \"lightgrey\",\r\n    fontSize: 20,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n\r\n  if (message === null && errorMessage === null) {\r\n    return null;\r\n  } else if (errorMessage === null) {\r\n    return (\r\n      <div>\r\n        <div style={notificationStyle}>{message}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        <div style={errorStyle}>{errorMessage}</div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport phonebook from \"./services/phonebook\";\r\n\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notification from \"./components/Notification\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [message, setMessage] = useState(null);\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    phonebook.getAll().then((response) => setPersons(response));\r\n  }, []);\r\n\r\n  const handleFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n  const handleNumberChange = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const handleDelete = async (personToDelete) => {\r\n    if (window.confirm(`poistetaanko ${personToDelete.name}`)) {\r\n      await phonebook\r\n        .del(personToDelete).then(response => {\r\n          setMessage(`${personToDelete.name} is deleted from phonebook`);\r\n          setTimeout(() => {\r\n            setMessage(null);\r\n          }, 3000);\r\n        }\r\n      \r\n        )\r\n        .catch((error) => {\r\n          console.log(error)\r\n          setErrorMessage(\r\n            `information of ${personToDelete.name} has already been removed from server`\r\n          );\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 3000);\r\n        });\r\n    }\r\n    phonebook.getAll().then((response) => setPersons(response));\r\n    setNewName(\"\");\r\n  };\r\n\r\n  const handleUpdate = (personToBeUpdated, nameObject) => {\r\n    if (\r\n      window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with new one?`\r\n      )\r\n    ) {\r\n      phonebook\r\n        .update(personToBeUpdated.id, nameObject)\r\n        .then((changedObject) => {\r\n          const newPersons = persons.map((person) =>\r\n            person.id !== personToBeUpdated.id ? person : changedObject\r\n          );\r\n          setPersons(newPersons);\r\n          setMessage(`${personToBeUpdated.name} number is updated.`);\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 3000);\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          setErrorMessage(\r\n            `information of ${personToBeUpdated.name} has already been removed from server`\r\n          );\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 3000);\r\n          setPersons(persons.filter((n) => n.id !== personToBeUpdated.id));\r\n        });\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleSaveClick = (event) => {\r\n    event.preventDefault();\r\n    const nameObject = {\r\n      name: newName,\r\n      number: newNumber,\r\n    };\r\n    if (persons.some((person) => person.name === newName)) {\r\n      const personToUpdate = persons.find((person) => person.name === newName);\r\n      handleUpdate(personToUpdate, nameObject);\r\n    } else {\r\n      phonebook\r\n        .create(nameObject)\r\n        .then((response) => setPersons(persons.concat(response)))\r\n        .catch(error => {\r\n          \r\n          setErrorMessage(error.response.data.message)\r\n          setTimeout(() => {\r\n            setErrorMessage(null);\r\n          }, 3000);\r\n          \r\n\r\n       \r\n      });\r\n      setMessage(`Added ${nameObject.name}`);\r\n      setTimeout(() => {\r\n        setMessage(null);\r\n      }, 3000);\r\n      setNewName(\"\");\r\n      setNewNumber(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification message={message} errorMessage={errorMessage} />\r\n      <Filter onChange={handleFilterChange} />\r\n      <h2>Add a new</h2>\r\n      <PersonForm\r\n        newName={newName}\r\n        newNumber={newNumber}\r\n        handleNameChange={handleNameChange}\r\n        handleNumberChange={handleNumberChange}\r\n        handleSaveClick={handleSaveClick}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons persons={persons} filter={filter} handleDelete={handleDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}